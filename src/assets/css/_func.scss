@charset 'utf-8';

$base-font-size: 75px; //design 750px / 10 = 75px;

@function pxToRem($px) {

	@return $px / $base-font-size * 1rem;
}
@function pxHalf($px) {
    @return $px / 2
}
@function percent($px, $px2: 1206) {
	@return $px / $px2 * 100%;
}

@function black($opacity){
	@return rgba(0,0,0,$opacity);
}
@function white($opacity){
	@return rgba(255,255,255,$opacity);
}

@mixin reset{
	margin: 0;
	padding: 0;
}

@mixin inline-block{
	display: inline-block;
	*display: inline;
	*zoom: 1;
}

@mixin clearfix{
	*zoom: 1;
	&:before,
	&:after{
		content: "";
		display: table;
		line-height: 0;
	}
	&:after{
		clear: both;
	}
}

@mixin size($width, $height) {
	width: pxToRem($width);
	height: pxToRem($height);
}
@mixin float($float:left){
	float: $float;
	_display: inline;
}
@mixin hide-text{
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}

@mixin inline-background($image,$width,$height) {
	// background:inline-image($image) no-repeat center;
	display: inline-block;
	background:url($image) no-repeat center;
    width:pxToRem($width);
    height:pxToRem($height);
    background-size:contain;
}
@mixin background($image,$width,$height,$rate:1) {
	display:block;
	background:url($image) no-repeat center;
    width:pxToRem($width * $rate);
    height:pxToRem($height * $rate);
    background-size:contain;
}
@mixin icon-background($image,$width,$height,$rate:1) {
	background-image:url($image);
    width:pxToRem($width * $rate);
    height:pxToRem($height * $rate);
}
@mixin break {
	-ms-word-break: break-all;
	word-break: break-all;
	word-break: break-word;
}
@mixin ellipsis {
    white-space: nowrap;
    word-wrap: normal;
    overflow: hidden;
    -o-text-overflow: ellipsis; /* Opera 9-10.6 */
    text-overflow: ellipsis;
    // display: inline-block;
    // *display: inline;
    *zoom: 1;
    vertical-align: top;
    max-width: 100%;
    // _width: 100%;
    text-align: left; /* Chrome 21+ bug */
}

// http://www.hicss.net/solve-change-line-in-css/
@mixin nowrap {
	white-space: nowrap;
	word-break: keep-all;
}
@mixin opacity($opacity) {
	opacity: $opacity;
	filter: alpha(opacity=#{$opacity * 100});
}
@mixin min-height($height) {
	min-height: $height;
	height: auto !important;
	_height: $height;
}

@mixin borderFake($pos, $color) {
    content: "";
    position: absolute;
    transform-origin: 0 0;
    -webkit-transform-origin: 0 0;
    @if $pos=='top'{
        #{$pos}: 0;
        left: 0;
        right: 0;
        border-#{$pos}: 1px solid $color;
        transform: scaleY(.5);
        -webkit-transform: scaleY(.5);
    } @else if $pos=='bottom' {
    	 #{$pos}: 0;
        left: 0;
        right: 0;
        border-#{$pos}: 1px solid $color;
        transform: scaleY(.5);
        -webkit-transform: scaleY(.5);
    } @else {
    	top: 0;
        bottom: 0;
        #{$pos}: 0;
        border-#{$pos}: 1px solid $color;
        transform: scaleX(.5);
        -webkit-transform: scaleX(.5);
    }
}
//border
@mixin border($pos, $color) {
    position: relative;
    &:after {
        @include borderFake($pos, $color )
    }
}
// font-size
@for $i from 20 through 60 {
  .font-#{$i} { font-size: #{$i/2}px}
}





